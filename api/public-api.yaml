openapi: 3.0.3
info:
  title: Booking System API
  description: |-
    TODO
  license:
    name: GNU Affero GPL 3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: 1.0.0
tags:
  - name: public
    description: Public REST APIs
  - name: admin
    description: Private Administration REST APIs
paths:
  /api/v1/add-event:
    post:
      tags:
        - public
      summary: Add an event
      description: Add a new event to the calendar
      operationId: addEvent
      requestBody:
        description: Event to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
        required: true
      responses:
        '200':
          description: Successfully added
        '409':
          description: Another event exists on this date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/events:
    get:
      tags:
        - public
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
          description: The date to obtain events from
        - in: query
          name: to
          schema:
            type: string
            format: date
          description: The date to obtain events to
      responses:
        '200':
          description: "Zero or more events exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        '400':
          description: Request parameters are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/admin/events:
    get:
      tags:
        - admin
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
          description: The date to obtain events from
        - in: query
          name: to
          schema:
            type: string
            format: date
          description: The date to obtain events to
      responses:
        '200':
          description: "Zero or more events exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        '400':
          description: Request parameters are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - error_message
      properties:
        error_message:
          type: string
    NewEvent:
      type: object
      required:
        - event
        - contact
      properties:
        event:
          type: object
          required:
            - name
            - from
            - to
            - publicly_visible
          properties:
            name:
              type: string
            from:
              type: string
              format: datetime
            to:
              type: string
              format: datetime
            publicly_visible:
              type: boolean
              default: true
        contact:
          type: object
          required:
            - name
            - email_address
          properties:
            name:
              type: string
            email_address:
              type: string
              format: email
    EventList:
      type: object
      required:
        - events
      properties:
        events  :
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ListEvent'
    ListEvent:
      type: object
      required:
        - id
        - name
        - from
        - to
        - status
      properties:
        id:
          type: string
        name:
          type: string
        from:
          type: string
          format: datetime
        to:
          type: string
          format: datetime
        status:
          type: string
          enum: [provisional, approved]
# TODO reenable this and ensure it reflects us using Google SSO
#  securitySchemes:
#    admin_auth:
#      type: oauth2
#      flows:
#        implicit:
#          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
#          scopes:
#            write:pets: modify pets in your account
#            read:pets: read your pets